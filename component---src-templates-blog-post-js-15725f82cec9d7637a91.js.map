{"version":3,"sources":["webpack:///./src/components/role-list.js","webpack:///./src/components/blog-post.js","webpack:///./src/templates/blog-post.js"],"names":["RoleList","items","title","className","styles","root","headline","list","map","item","key","_key","listItem","avatar","person","image","asset","src","imageUrlFor","buildImageObj","width","height","fit","url","alt","name","roles","role","idx","str","substr","toUpperCase","length","BlogPost","props","_rawBody","authors","categories","mainImage","publishedAt","Math","floor","grid","mainContent","blocks","metaContent","differenceInDays","Date","distanceInWords","format","categoriesHeadline","category","_id","query","BlogPostTemplate","data","errors","post"],"mappings":"2KAyDeA,IA/Cf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1B,OACE,yBAAKC,UAAWC,IAAOC,MACrB,wBAAIF,UAAWC,IAAOE,UAAWJ,GACjC,wBAAIC,UAAWC,IAAOG,MACnBN,EAAMO,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,KAAMR,UAAWC,IAAOQ,UACpC,6BACE,yBAAKT,UAAWC,IAAOS,QACpBJ,EAAKK,QAAUL,EAAKK,OAAOC,OAASN,EAAKK,OAAOC,MAAMC,OACrD,yBACEC,IAAKC,YAAYC,YAAcV,EAAKK,OAAOC,QACxCK,MAAM,KACNC,OAAO,KACPC,IAAI,QACJC,MACHC,IAAI,OAKZ,6BACE,6BACE,gCAAUf,EAAKK,QAAUL,EAAKK,OAAOW,MAAS,yCAE/ChB,EAAKiB,OACJ,6BACGjB,EAAKiB,MAAMlB,KAAI,SAACmB,EAAMC,GACrB,QAAQ,GACN,KAAa,IAARA,EACH,OAAO,0BAAMlB,IAAKiB,GAjClC,IADUE,EAkCuCF,GAjCzCG,OAAO,EAAG,GAAGC,cAAgBF,EAAIC,OAAO,IAkClC,KAAKF,IAAQnB,EAAKiB,MAAMM,OAAS,EAC/B,OAAO,0BAAMtB,IAAKiB,GAAX,MAAqBA,GAC9B,QACE,OAAO,0BAAMjB,IAAKiB,GAAX,KAAoBA,GAtCnD,IAAkBE,e,2KCoDHI,MAhDf,SAAmBC,GAAQ,IACjBC,EAAiED,EAAjEC,SAAUC,EAAuDF,EAAvDE,QAASC,EAA8CH,EAA9CG,WAAYnC,EAAkCgC,EAAlChC,MAAOoC,EAA2BJ,EAA3BI,UAAWC,EAAgBL,EAAhBK,YACzD,OACE,6BAASpC,UAAWC,IAAOC,MACxBiC,GAAaA,EAAUtB,OACtB,yBAAKb,UAAWC,IAAOkC,WACrB,yBACErB,IAAKC,YAAYC,YAAcmB,IAC5BlB,MAAM,MACNC,OAAOmB,KAAKC,MAAO,MACnBnB,IAAI,QACJC,MACHC,IAAKc,EAAUd,OAIrB,kBAAC,IAAD,KACE,yBAAKrB,UAAWC,IAAOsC,MACrB,yBAAKvC,UAAWC,IAAOuC,aACrB,wBAAIxC,UAAWC,IAAOF,OAAQA,GAC7BiC,GAAY,kBAAC,IAAD,CAAcS,OAAQT,KAErC,2BAAOhC,UAAWC,IAAOyC,aACtBN,GACC,yBAAKpC,UAAWC,IAAOmC,aACpBO,2BAAiB,IAAIC,KAAKR,GAAc,IAAIQ,MAAU,EACnDC,0BAAgB,IAAID,KAAKR,GAAc,IAAIQ,MAC3CE,iBAAO,IAAIF,KAAKR,GAAc,iBAGrCH,GAAW,kBAAC,IAAD,CAAUnC,MAAOmC,EAASlC,MAAM,YAC3CmC,GACC,yBAAKlC,UAAWC,IAAOiC,YACrB,wBAAIlC,UAAWC,IAAO8C,oBAAtB,cACA,4BACGb,EAAW7B,KAAI,SAAA2C,GAAQ,OACtB,wBAAIzC,IAAKyC,EAASC,KAAMD,EAASjD,iB,wBC9CrD,sCAQO,IAAMmD,EAAK,aAuFHC,UAnBU,SAAApB,GAAU,IACzBqB,EAAiBrB,EAAjBqB,KAAMC,EAAWtB,EAAXsB,OACRC,EAAOF,GAAQA,EAAKE,KAC1B,OACE,kBAAC,IAAD,KACGD,GAAU,kBAAC,IAAD,CAAKtD,MAAM,kBACrBuD,GAAQ,kBAAC,IAAD,CAAKvD,MAAOuD,EAAKvD,OAAS,aAElCsD,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAI7BC,GAAQ,kBAAC,EAAaA","file":"component---src-templates-blog-post-js-15725f82cec9d7637a91.js","sourcesContent":["import React from 'react'\nimport { buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\n\nimport styles from './role-list.module.css'\n\nfunction ucfirst (str) {\n  return `${str.substr(0, 1).toUpperCase()}${str.substr(1)}`\n}\n\nfunction RoleList ({ items, title }) {\n  return (\n    <div className={styles.root}>\n      <h2 className={styles.headline}>{title}</h2>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item._key} className={styles.listItem}>\n            <div>\n              <div className={styles.avatar}>\n                {item.person && item.person.image && item.person.image.asset && (\n                  <img\n                    src={imageUrlFor(buildImageObj(item.person.image))\n                      .width(100)\n                      .height(100)\n                      .fit('crop')\n                      .url()}\n                    alt=''\n                  />\n                )}\n              </div>\n            </div>\n            <div>\n              <div>\n                <strong>{(item.person && item.person.name) || <em>Missing</em>}</strong>\n              </div>\n              {item.roles && (\n                <div>\n                  {item.roles.map((role, idx) => {\n                    switch (true) {\n                      case idx === 0:\n                        return <span key={role}>{ucfirst(role)}</span>\n                      case idx === item.roles.length - 1:\n                        return <span key={role}> & {role}</span>\n                      default:\n                        return <span key={role}>, {role}</span>\n                    }\n                  })}\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default RoleList\n","import { format, distanceInWords, differenceInDays } from 'date-fns'\nimport React from 'react'\nimport { buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\nimport BlockContent from './block-content'\nimport Container from './container'\nimport RoleList from './role-list'\n\nimport styles from './blog-post.module.css'\n\nfunction BlogPost (props) {\n  const { _rawBody, authors, categories, title, mainImage, publishedAt } = props\n  return (\n    <article className={styles.root}>\n      {mainImage && mainImage.asset && (\n        <div className={styles.mainImage}>\n          <img\n            src={imageUrlFor(buildImageObj(mainImage))\n              .width(1200)\n              .height(Math.floor((9 / 16) * 1200))\n              .fit('crop')\n              .url()}\n            alt={mainImage.alt}\n          />\n        </div>\n      )}\n      <Container>\n        <div className={styles.grid}>\n          <div className={styles.mainContent}>\n            <h1 className={styles.title}>{title}</h1>\n            {_rawBody && <BlockContent blocks={_rawBody} />}\n          </div>\n          <aside className={styles.metaContent}>\n            {publishedAt && (\n              <div className={styles.publishedAt}>\n                {differenceInDays(new Date(publishedAt), new Date()) > 3\n                  ? distanceInWords(new Date(publishedAt), new Date())\n                  : format(new Date(publishedAt), 'MMMM Do YYYY')}\n              </div>\n            )}\n            {authors && <RoleList items={authors} title='Authors' />}\n            {categories && (\n              <div className={styles.categories}>\n                <h3 className={styles.categoriesHeadline}>Categories</h3>\n                <ul>\n                  {categories.map(category => (\n                    <li key={category._id}>{category.title}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </aside>\n        </div>\n      </Container>\n    </article>\n  )\n}\n\nexport default BlogPost\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport BlogPost from '../components/blog-post'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query BlogPostTemplateQuery($id: String!) {\n    post: sanityPost(id: { eq: $id }) {\n      id\n      publishedAt\n      categories {\n        _id\n        title\n      }\n      mainImage {\n        crop {\n          _key\n          _type\n          top\n          bottom\n          left\n          right\n        }\n        hotspot {\n          _key\n          _type\n          x\n          y\n          height\n          width\n        }\n        asset {\n          _id\n        }\n        alt\n      }\n      title\n      slug {\n        current\n      }\n      _rawBody\n      authors {\n        _key\n        person {\n          image {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n          }\n          name\n        }\n        roles\n      }\n    }\n  }\n`\n\nconst BlogPostTemplate = props => {\n  const { data, errors } = props\n  const post = data && data.post\n  return (\n    <Layout>\n      {errors && <SEO title='GraphQL Error' />}\n      {post && <SEO title={post.title || 'Untitled'} />}\n\n      {errors && (\n        <Container>\n          <GraphQLErrorList errors={errors} />\n        </Container>\n      )}\n\n      {post && <BlogPost {...post} />}\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n"],"sourceRoot":""}