{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/templates/project.js","webpack:///./src/components/role-list.js"],"names":["Project","props","_rawBody","title","categories","mainImage","members","publishedAt","relatedProjects","className","styles","root","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","fit","url","alt","grid","mainContent","blocks","metaContent","differenceInDays","Date","distanceInWords","format","items","categoriesHeadline","map","category","key","_id","relatedProjectsHeadline","project","to","slug","current","query","ProjectTemplate","data","errors","RoleList","headline","list","item","_key","listItem","avatar","person","image","name","roles","role","idx","str","substr","toUpperCase","length"],"mappings":"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","file":"component---src-templates-project-js-06f2f4868f34d009e5f0.js","sourcesContent":["import { format, distanceInWords, differenceInDays } from 'date-fns'\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\nimport BlockContent from './block-content'\nimport Container from './container'\nimport RoleList from './role-list'\n\nimport styles from './project.module.css'\n\nfunction Project (props) {\n  const { _rawBody, title, categories, mainImage, members, publishedAt, relatedProjects } = props\n  return (\n    <article className={styles.root}>\n      {props.mainImage && mainImage.asset && (\n        <div className={styles.mainImage}>\n          <img\n            src={imageUrlFor(buildImageObj(mainImage))\n              .width(1200)\n              .height(Math.floor((9 / 16) * 1200))\n              .fit('crop')\n              .url()}\n            alt={mainImage.alt}\n          />\n        </div>\n      )}\n      <Container>\n        <div className={styles.grid}>\n          <div className={styles.mainContent}>\n            <h1 className={styles.title}>{title}</h1>\n            {_rawBody && <BlockContent blocks={_rawBody || []} />}\n          </div>\n          <aside className={styles.metaContent}>\n            {publishedAt && (\n              <div className={styles.publishedAt}>\n                {differenceInDays(new Date(publishedAt), new Date()) > 3\n                  ? distanceInWords(new Date(publishedAt), new Date())\n                  : format(new Date(publishedAt), 'MMMM Do YYYY')}\n              </div>\n            )}\n            {members && <RoleList items={members} title='Authors' />}\n            {categories && (\n              <div className={styles.categories}>\n                <h3 className={styles.categoriesHeadline}>Categories</h3>\n                <ul>\n                  {categories.map(category => (\n                    <li key={category._id}>{category.title}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {relatedProjects && (\n              <div className={styles.relatedProjects}>\n                <h3 className={styles.relatedProjectsHeadline}>Related projects</h3>\n                <ul>\n                  {relatedProjects.map(project => (\n                    <li key={`related_${project._id}`}>\n                      <Link to={`/project/${project.slug.current}`}>{project.title}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </aside>\n        </div>\n      </Container>\n    </article>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport Project from '../components/project'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query ProjectTemplateQuery($id: String!) {\n    project: sanityProject(id: { eq: $id }) {\n      id\n      publishedAt\n      categories {\n        _id\n        title\n      }\n      relatedProjects {\n        title\n        _id\n        slug {\n          current\n        }\n      }\n      mainImage {\n        crop {\n          _key\n          _type\n          top\n          bottom\n          left\n          right\n        }\n        hotspot {\n          _key\n          _type\n          x\n          y\n          height\n          width\n        }\n        asset {\n          _id\n        }\n        alt\n      }\n      title\n      slug {\n        current\n      }\n      _rawBody\n      members {\n        _key\n        person {\n          image {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n          }\n          name\n        }\n        roles\n      }\n    }\n  }\n`\n\nconst ProjectTemplate = props => {\n  const { data, errors } = props\n  const project = data && data.project\n  return (\n    <Layout>\n      {errors && <SEO title='GraphQL Error' />}\n      {project && <SEO title={project.title || 'Untitled'} />}\n\n      {errors && (\n        <Container>\n          <GraphQLErrorList errors={errors} />\n        </Container>\n      )}\n      {project && <Project {...project} />}\n    </Layout>\n  )\n}\n\nexport default ProjectTemplate\n","import React from 'react'\nimport { buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\n\nimport styles from './role-list.module.css'\n\nfunction ucfirst (str) {\n  return `${str.substr(0, 1).toUpperCase()}${str.substr(1)}`\n}\n\nfunction RoleList ({ items, title }) {\n  return (\n    <div className={styles.root}>\n      <h2 className={styles.headline}>{title}</h2>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item._key} className={styles.listItem}>\n            <div>\n              <div className={styles.avatar}>\n                {item.person && item.person.image && item.person.image.asset && (\n                  <img\n                    src={imageUrlFor(buildImageObj(item.person.image))\n                      .width(100)\n                      .height(100)\n                      .fit('crop')\n                      .url()}\n                    alt=''\n                  />\n                )}\n              </div>\n            </div>\n            <div>\n              <div>\n                <strong>{(item.person && item.person.name) || <em>Missing</em>}</strong>\n              </div>\n              {item.roles && (\n                <div>\n                  {item.roles.map((role, idx) => {\n                    switch (true) {\n                      case idx === 0:\n                        return <span key={role}>{ucfirst(role)}</span>\n                      case idx === item.roles.length - 1:\n                        return <span key={role}> & {role}</span>\n                      default:\n                        return <span key={role}>, {role}</span>\n                    }\n                  })}\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default RoleList\n"],"sourceRoot":""}