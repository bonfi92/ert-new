{"version":3,"sources":["webpack:///./src/components/people-grid.js","webpack:///./src/pages/about.js"],"names":["ProfileCard","image","name","_rawBio","className","styles","profileCard","profileMediaThumb","asset","src","imageUrlFor","buildImageObj","width","height","fit","url","headline","bio","blocks","PeopleGrid","items","title","root","responsiveTitle2","grid","map","item","key","id","query","AboutPage","props","data","errors","page","personNodes","people","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","Error","responsiveTitle1","_rawBody","length"],"mappings":"kPAQA,SAASA,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACnC,OACE,yBAAKC,UAAWC,IAAOC,aACrB,yBAAKF,UAAWC,IAAOE,mBACpBN,GAASA,EAAMO,OACd,yBACEC,IAAKC,YAAYC,YAAcV,IAC5BW,MAAM,KACNC,OAAO,KACPC,IAAI,QACJC,SAIT,wBAAIX,UAAWC,IAAOW,UAAWd,GAChCC,GACC,yBAAKC,UAAWC,IAAOY,KACrB,kBAAC,IAAD,CAAWC,OAAQf,MAsBdgB,MAff,YAAwC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC5B,OACE,yBAAKjB,UAAWC,IAAOiB,MACpB,wBAAIlB,UAAWmB,oBAAmBF,GACnC,wBAAIjB,UAAWC,IAAOmB,MACnBJ,EAAMK,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC5B,EAAgB0B,U,wBCvC7B,sCAYO,IAAMG,EAAK,aAyDHC,UAjCG,SAAAC,GAAU,IAClBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,EAAOF,GAAQA,EAAKE,KACpBC,EACJH,GAAQA,EAAKI,QAAUC,YAAgBL,EAAKI,QAAQE,OAAOC,KAE7D,IAAKL,EACH,MAAM,IAAIM,MACR,qIAIJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,MAAOa,EAAKb,QACjB,kBAAC,IAAD,KACE,wBAAIjB,UAAWqC,oBAAmBP,EAAKb,OACvC,kBAAC,IAAD,CAAcH,OAAQgB,EAAKQ,UAAY,KACtCP,GAAeA,EAAYQ,OAAS,GAAK,kBAAC,EAAD,CAAYvB,MAAOe,EAAad,MAAM","file":"component---src-pages-about-js-43dc8db82110cea44c93.js","sourcesContent":["import React from 'react'\nimport BlockText from './block-text'\nimport { buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\n\nimport styles from './people-grid.module.css'\nimport { responsiveTitle2 } from '../components/typography.module.css'\n\nfunction ProfileCard ({ image, name, _rawBio }) {\n  return (\n    <div className={styles.profileCard}>\n      <div className={styles.profileMediaThumb}>\n        {image && image.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(image))\n              .width(600)\n              .height(600)\n              .fit('crop')\n              .url()}\n          />\n        )}\n      </div>\n      <h2 className={styles.headline}>{name}</h2>\n      {_rawBio && (\n        <div className={styles.bio}>\n          <BlockText blocks={_rawBio} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction PeopleGrid ({ items, title }) {\n  return (\n    <div className={styles.root}>\n      {<h2 className={responsiveTitle2}>{title}</h2>}\n      <ul className={styles.grid}>\n        {items.map(item => (\n          <li key={item.id}>\n            <ProfileCard {...item} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default PeopleGrid\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport BlockContent from '../components/block-content'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport PeopleGrid from '../components/people-grid'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\nimport { mapEdgesToNodes, filterOutDocsWithoutSlugs } from '../lib/helpers'\n\nimport { responsiveTitle1 } from '../components/typography.module.css'\n\nexport const query = graphql`\n  query AboutPageQuery {\n    page: sanityPage(_id: { regex: \"/(drafts.|)about/\" }) {\n      id\n      title\n      _rawBody\n    }\n    people: allSanityPerson {\n      edges {\n        node {\n          id\n          image {\n            asset {\n              _id\n            }\n          }\n          name\n          _rawBio\n        }\n      }\n    }\n  }\n`\n\nconst AboutPage = props => {\n  const { data, errors } = props\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n\n  const page = data && data.page\n  const personNodes =\n    data && data.people && mapEdgesToNodes(data.people).filter(filterOutDocsWithoutSlugs)\n\n  if (!page) {\n    throw new Error(\n      'Missing \"About\" page data. Open the studio at http://localhost:3333 and add \"About\" page data and restart the development server.'\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title={page.title} />\n      <Container>\n        <h1 className={responsiveTitle1}>{page.title}</h1>\n        <BlockContent blocks={page._rawBody || []} />\n        {personNodes && personNodes.length > 0 && <PeopleGrid items={personNodes} title='People' />}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n"],"sourceRoot":""}