{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/blog-post-preview.js","webpack:///./src/components/blog-post-preview-grid.js","webpack:///./src/components/project-preview.js","webpack:///./src/components/project-preview-grid.js"],"names":["query","IndexPage","props","data","errors","site","postNodes","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","projectNodes","projects","Error","title","description","keywords","hidden","nodes","browseMoreHref","BlogPostPreview","className","styles","root","to","getBlogUrl","publishedAt","slug","current","leadMediaThumb","mainImage","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","url","alt","cn","responsiveTitle3","_rawExcerpt","excerpt","blocks","BlogPostPreviewGrid","headline","grid","map","node","key","id","browseMoreNav","defaultProps","ProjectPreview","ProjectPreviewGrid"],"mappings":"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","file":"component---src-pages-index-js-1bba01105d3174b614b9.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { mapEdgesToNodes, filterOutDocsWithoutSlugs } from '../lib/helpers'\nimport BlogPostPreviewGrid from '../components/blog-post-preview-grid'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport ProjectPreviewGrid from '../components/project-preview-grid'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      description\n      keywords\n    }\n\n    projects: allSanityProject(limit: 6, sort: { fields: [publishedAt], order: DESC }) {\n      edges {\n        node {\n          id\n          mainImage {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n\n    posts: allSanityPost(limit: 6, sort: { fields: [publishedAt], order: DESC }) {\n      edges {\n        node {\n          id\n          publishedAt\n          mainImage {\n            crop {\n              _key\n              _type\n              top\n              bottom\n              left\n              right\n            }\n            hotspot {\n              _key\n              _type\n              x\n              y\n              height\n              width\n            }\n            asset {\n              _id\n            }\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = props => {\n  const { data, errors } = props\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n\n  const site = (data || {}).site\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts).filter(filterOutDocsWithoutSlugs)\n    : []\n  const projectNodes = (data || {}).projects\n    ? mapEdgesToNodes(data.projects).filter(filterOutDocsWithoutSlugs)\n    : []\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title={site.title} description={site.description} keywords={site.keywords} />\n      <Container>\n        <h1 hidden>Welcome to {site.title}</h1>\n        {projectNodes && (\n          <ProjectPreviewGrid\n            title='Latest projects'\n            nodes={projectNodes}\n            browseMoreHref='/projects/'\n          />\n        )}\n        {postNodes && (\n          <BlogPostPreviewGrid\n            title='Latest blog posts'\n            nodes={postNodes}\n            browseMoreHref='/blog/'\n          />\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { buildImageObj, cn, getBlogUrl } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\nimport BlockText from './block-text'\n\nimport styles from './blog-post-preview.module.css'\nimport { responsiveTitle3 } from './typography.module.css'\n\nfunction BlogPostPreview (props) {\n  return (\n    <Link className={styles.root} to={getBlogUrl(props.publishedAt, props.slug.current)}>\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n      {props._rawExcerpt && (\n        <div className={styles.excerpt}>\n          <BlockText blocks={props._rawExcerpt} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default BlogPostPreview\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport BlogPostPreview from './blog-post-preview'\n\nimport styles from './blog-post-preview-grid.module.css'\n\nfunction BlogPostPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && (\n        <h2 className={styles.headline}>\n          {props.browseMoreHref ? (\n            <Link to={props.browseMoreHref}>{props.title}</Link>\n          ) : (\n            props.title\n          )}\n        </h2>\n      )}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <BlogPostPreview {...node} />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nBlogPostPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default BlogPostPreviewGrid\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { cn, buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\nimport BlockText from './block-text'\n\nimport styles from './project-preview.module.css'\nimport { responsiveTitle3 } from './typography.module.css'\n\nfunction ProjectPreview (props) {\n  return (\n    <Link className={styles.root} to={`/project/${props.slug.current}`}>\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n      {props._rawExcerpt && (\n        <div className={styles.excerpt}>\n          <BlockText blocks={props._rawExcerpt} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default ProjectPreview\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport ProjectPreview from './project-preview'\n\nimport styles from './project-preview-grid.module.css'\n\nfunction ProjectPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && (\n        <h2 className={styles.headline}>\n          {props.browseMoreHref ? (\n            <Link to={props.browseMoreHref}>{props.title}</Link>\n          ) : (\n            props.title\n          )}\n        </h2>\n      )}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <ProjectPreview {...node} />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nProjectPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default ProjectPreviewGrid\n"],"sourceRoot":""}