{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/project-preview.js","webpack:///./src/components/project-preview-grid.js"],"names":["query","ProjectsPage","props","data","errors","projectNodes","projects","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","title","className","responsiveTitle1","length","nodes","ProjectPreview","styles","root","to","slug","current","leadMediaThumb","mainImage","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","url","alt","cn","responsiveTitle3","_rawExcerpt","excerpt","blocks","ProjectPreviewGrid","headline","browseMoreHref","grid","map","node","key","id","browseMoreNav","defaultProps"],"mappings":"6FAAA,0JAWaA,EAAK,aA6CHC,UAtBM,SAAAC,GAAU,IACrBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACd,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAIhC,IAAMC,EACJF,GAAQA,EAAKG,UAAYC,YAAgBJ,EAAKG,UAAUE,OAAOC,KACjE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,KACE,wBAAIC,UAAWC,oBAAf,YACCP,GAAgBA,EAAaQ,OAAS,GAAK,kBAAC,IAAD,CAAoBC,MAAOT,Q,4ICjBhEU,MAxBf,SAAyBb,GACvB,OACE,kBAAC,IAAD,CAAMS,UAAWK,IAAOC,KAAMC,GAAE,YAAchB,EAAMiB,KAAKC,SACvD,yBAAKT,UAAWK,IAAOK,gBACpBnB,EAAMoB,WAAapB,EAAMoB,UAAUC,OAClC,yBACEC,IAAKC,YAAYC,YAAcxB,EAAMoB,YAClCK,MAAM,KACNC,OAAOC,KAAKC,MAAO,QACnBC,MACHC,IAAK9B,EAAMoB,UAAUU,OAI3B,wBAAIrB,UAAWsB,YAAGC,mBAAkBlB,IAAON,QAASR,EAAMQ,OACzDR,EAAMiC,aACL,yBAAKxB,UAAWK,IAAOoB,SACrB,kBAAC,IAAD,CAAWC,OAAQnC,EAAMiC,iB,qBCpBnC,SAASG,EAAoBpC,GAC3B,OACE,yBAAKS,UAAWK,IAAOC,MACpBf,EAAMQ,OACL,wBAAIC,UAAWK,IAAOuB,UACnBrC,EAAMsC,eACL,kBAAC,IAAD,CAAMtB,GAAIhB,EAAMsC,gBAAiBtC,EAAMQ,OAEvCR,EAAMQ,OAIZ,wBAAIC,UAAWK,IAAOyB,MACnBvC,EAAMY,OACLZ,EAAMY,MAAM4B,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,EAAmBF,QAI3BzC,EAAMsC,gBACL,yBAAK7B,UAAWK,IAAO8B,eACrB,kBAAC,IAAD,CAAM5B,GAAIhB,EAAMsC,gBAAhB,iBAOVF,EAAmBS,aAAe,CAChCrC,MAAO,GACPI,MAAO,GACP0B,eAAgB,IAGHF","file":"component---src-pages-projects-js-34055f274090823816dc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport ProjectPreviewGrid from '../components/project-preview-grid'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\nimport { mapEdgesToNodes, filterOutDocsWithoutSlugs } from '../lib/helpers'\n\nimport { responsiveTitle1 } from '../components/typography.module.css'\n\nexport const query = graphql`\n  query ProjectsPageQuery {\n    projects: allSanityProject(limit: 12, sort: { fields: [publishedAt], order: DESC }) {\n      edges {\n        node {\n          id\n          mainImage {\n            asset {\n              _id\n            }\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ProjectsPage = props => {\n  const { data, errors } = props\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n  const projectNodes =\n    data && data.projects && mapEdgesToNodes(data.projects).filter(filterOutDocsWithoutSlugs)\n  return (\n    <Layout>\n      <SEO title='Projects' />\n      <Container>\n        <h1 className={responsiveTitle1}>Projects</h1>\n        {projectNodes && projectNodes.length > 0 && <ProjectPreviewGrid nodes={projectNodes} />}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { cn, buildImageObj } from '../lib/helpers'\nimport { imageUrlFor } from '../lib/image-url'\nimport BlockText from './block-text'\n\nimport styles from './project-preview.module.css'\nimport { responsiveTitle3 } from './typography.module.css'\n\nfunction ProjectPreview (props) {\n  return (\n    <Link className={styles.root} to={`/project/${props.slug.current}`}>\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n      {props._rawExcerpt && (\n        <div className={styles.excerpt}>\n          <BlockText blocks={props._rawExcerpt} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default ProjectPreview\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport ProjectPreview from './project-preview'\n\nimport styles from './project-preview-grid.module.css'\n\nfunction ProjectPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && (\n        <h2 className={styles.headline}>\n          {props.browseMoreHref ? (\n            <Link to={props.browseMoreHref}>{props.title}</Link>\n          ) : (\n            props.title\n          )}\n        </h2>\n      )}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <ProjectPreview {...node} />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nProjectPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default ProjectPreviewGrid\n"],"sourceRoot":""}